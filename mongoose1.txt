in app.js

var express=require('express');
var bodyparser=require('body-parser')
var mongoose=require('mongoose');// required mongo module
const app=express();

app.use(bodyparser.urlencoded({extended:true}))



var mongodb=require('mongodb');
var mongoclient=mongodb.MongoClient;
var url="mongodb://127.0.0.1:27017";//should copy this url else error
app.set("view engine","ejs");
var db="mongodb://localhost/example";//specifying the db used in this project
mongoose.connect(db,function(err){
    if(err){console.log(err)}
}) //connect with our server mentioned in db
var book=require("./model/Book.js");//requiring mongodb
app.get('/',function(req,res){
    res.render("home")
})
app.get('/insert',function(req,res){
   var b1=new book();
   b1.bookid="Book1";
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

})
app.get('/insert1',function(req,res){
   res.render("add")
 })

app.post("/actionPage",function(req,res){
    var BookId = req.body.field1;
    var Bname = req.body.field2;
    var Bauthor = req.body.field3;
    var Bpublisher=req.body.field4;
    var insertData = {BookId:BookId,BookName:Bname,BookAuthor:Bauthor,BookPublisher:Bpublisher}
    mongoclient.connect(url,function(err,database){
        var dtb=database.db('example');
        var empcol=dtb.collection('Booktab');
        empcol.insert(insertData,function(err,successResult){
            if(err){
                res.send("Not insert")
            }
            else{
                res.send("Inserted")
            }
        })
    })

})
app.post("/insert",function(req,res){

    var b1=new book();
   b1.bookid=req.body.Bookid;
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

    var BookId = req.body.Bookid;
    var Bname = req.body.Bookname;
    var Bauthor = req.body.Bookauthor;
    var Bpublisher=req.body.Bookpublisher;
    
})
app.listen(1234,function(req,res){
    console.log("server started listening")
})

---------------------------------------------------------------------------------------------------------home.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>
</head>
<body>

    <li><a href="/insert1">Insert Data</a></li>
    <li><a href="/Add">Insert Data</a></li>
    <li><a href="/Delete">Insert Data</a></li>
    <!-- <form action="/insert" method="get">
        
                <input type= "submit" value= "Insert"/>
    </form>
    <form action="/delete" method="get">
        
        <input type= "submit" value= "Delete"/>
</form>
<form action="/view" method="get">
   
    <input type= "submit" value= "view"/>
</form>
<form action="/insert" method="get">
    
    <input type= "submit" value= "Insert"/>
</form> -->
</html>
-----------------------------------------------------------------------------------------------------------book.js
var mongoose=require('mongoose');
var Schema=mongoose.Schema;
var BookSchema =new Schema({
    bookid:{type:String},
    bname:{type:String},
    author:{type:String}
}

)
module.exports=mongoose.model("Booktab",BookSchema);
-----------------------------------------------------------------------------------------------------------add.ejs

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Adding</title>
</head>
<body>
    <h2>Add to db</h2>
    <form action="/insert" method="POST">
        <input type="text" name="Bookid">
        <input type="text" name="Bookname">
        <input type="text" name="Bookauthor">
        <input type="text" name="Bookpublisher">
                <input type= "submit" value= "Insert"/>
    </form>
</body>
</html>
-----------------------------------------------------------------------------------------------------------server started running 
then in localhost

we get links

when we insert in briowse, we get out put in cmd mongo on db.




--------------------------------------------------------------------------------------------------------------Question: to delete in db
in app.js

var express=require('express');
var bodyparser=require('body-parser')
var mongoose=require('mongoose');// required mongo module
const app=express();

app.use(bodyparser.urlencoded({extended:true}))



var mongodb=require('mongodb');
var mongoclient=mongodb.MongoClient;
var url="mongodb://127.0.0.1:27017";//should copy this url else error
app.set("view engine","ejs");
var db="mongodb://localhost/example";//specifying the db used in this project
mongoose.connect(db,function(err){
    if(err){console.log(err)}
}) //connect with our server mentioned in db
var book=require("./model/Book.js");//requiring mongodb
app.get('/',function(req,res){
    res.render("home")
})
app.get('/insert',function(req,res){
   var b1=new book();
   b1.bookid="Book1";
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

})
app.get('/insert1',function(req,res){
   res.render("add")
 })

app.post("/actionPage",function(req,res){
    var BookId = req.body.field1;
    var Bname = req.body.field2;
    var Bauthor = req.body.field3;
    var Bpublisher=req.body.field4;
    var insertData = {BookId:BookId,BookName:Bname,BookAuthor:Bauthor,BookPublisher:Bpublisher}
    mongoclient.connect(url,function(err,database){
        var dtb=database.db('example');
        var empcol=dtb.collection('Booktab');
        empcol.insert(insertData,function(err,successResult){
            if(err){
                res.send("Not insert")
            }
            else{
                res.send("Inserted")
            }
        })
    })

})
app.post("/insert",function(req,res){

    var b1=new book();
   b1.bookid=req.body.Bookid;
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

    var BookId = req.body.Bookid;
    var Bname = req.body.Bookname;
    var Bauthor = req.body.Bookauthor;
    var Bpublisher=req.body.Bookpublisher;
    
})

app.get("/delete",function(req,res){
    res.render("deletebook")
})
app.post("/delete",function(req,res){
   book.deleteOne({bookid:"sdsd"},function(err,result)
        { 
        if(err){res.send("err")}
        else { res.send("data deleted")}
    })// same book given in book of loc18
})

app.listen(1234,function(req,res){
    console.log("server started listening")
})

--------------------------------------------------------------------------------------deletebooks.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
        <form action="/delete" method="POST">
        
            <input type= "submit" value= "delete"/>
</form>
</body>
</html>
----------------------------------------------------------------------------------------on server started running, we gotobrowse
localhost:1234

click delete, then in http://localhost:1234/delete, we get data deleted

on going to cmd and in mongo, type, > db.booktabs.find() ane we get out as follows, ie sdsd bookdetails
 deleted

{ "_id" : ObjectId("5c5a1e5f37da4e1a746852d9"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a20ca7acc261300b6e90b"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a22877acc261300b6e90c"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a242469910513c42db3f9"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a242c69910513c42db3fa"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a243769910513c42db3fb"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a248e69910513c42db3fc"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a277360b5f32230a0ec72"), "bookid" : "Book1", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
{ "_id" : ObjectId("5c5a27b160b5f32230a0ec74"), "bookid" : "ABcdefg", "bname" : "shdjshds", "author" : "dsdsd", "__v" : 0 }
>

-------------------------------------------------------------------------------------------------------------------------------------next to view,
in cmd

var express=require('express');
var bodyparser=require('body-parser')
var mongoose=require('mongoose');// required mongo module
const app=express();

app.use(bodyparser.urlencoded({extended:true}))



var mongodb=require('mongodb');
var mongoclient=mongodb.MongoClient;
var url="mongodb://127.0.0.1:27017";//should copy this url else error
app.set("view engine","ejs");
var db="mongodb://localhost/example";//specifying the db used in this project
mongoose.connect(db,function(err){
    if(err){console.log(err)}
}) //connect with our server mentioned in db
var book=require("./model/Book.js");//requiring mongodb
app.get('/',function(req,res){
    res.render("home")
})
app.get('/insert',function(req,res){
   var b1=new book();
   b1.bookid="Book1";
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

})
app.get('/insert1',function(req,res){
   res.render("add")
 })

app.post("/actionPage",function(req,res){
    var BookId = req.body.field1;
    var Bname = req.body.field2;
    var Bauthor = req.body.field3;
    var Bpublisher=req.body.field4;
    var insertData = {BookId:BookId,BookName:Bname,BookAuthor:Bauthor,BookPublisher:Bpublisher}
    mongoclient.connect(url,function(err,database){
        var dtb=database.db('example');
        var empcol=dtb.collection('Booktab');
        empcol.insert(insertData,function(err,successResult){
            if(err){
                res.send("Not insert")
            }
            else{
                res.send("Inserted")
            }
        })
    })

})
app.post("/insert",function(req,res){

    var b1=new book();
   b1.bookid=req.body.Bookid;
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

    var BookId = req.body.Bookid;
    var Bname = req.body.Bookname;
    var Bauthor = req.body.Bookauthor;
    var Bpublisher=req.body.Bookpublisher;
    
})

app.get("/delete",function(req,res){
    res.render("deletebook")
})
app.post("/delete",function(req,res){
   book.deleteOne({bookid:"sdsd"},function(err,result)
        { 
        if(err){res.send("err")}
        else { res.send("data deleted")}
    })// same book given in book of loc18
})


app.get("/view",function(req,res){    
    book.find({},function(err,result){
        if(err){res.send("err")}
        else   {
            res.render('viewbook',{data:result});
        }
    
      
})
})

app.listen(1234,function(req,res){
    console.log("server started listening")
})

-----------------------------------------------------------------------------viewbook.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
        <table>
                <th>BookID</th>
                <th>Book NAme</th>
                <th>Author</th>  
                <th>BookPublisher</th>
                            <% for(var i=0;i<data.length;i++){%>
                        <tr>
                            <td><%=(i+1)%></td>
                            <td><%=data[i].bookid %></td>
                            <td><%=data[i].bname %></td>
                            <td><%=data[i].author %></td>
                            
                            
                        </tr>
                        <% }%>
                    </table>
             
</body>
</html>
-----------------------------------------------------------------------------to update
app.js

var express=require('express');
var bodyparser=require('body-parser')
var mongoose=require('mongoose');// required mongo module
const app=express();

app.use(bodyparser.urlencoded({extended:true}))



var mongodb=require('mongodb');
var mongoclient=mongodb.MongoClient;
var url="mongodb://127.0.0.1:27017";//should copy this url else error
app.set("view engine","ejs");
var db="mongodb://localhost/example";//specifying the db used in this project
mongoose.connect(db,function(err){
    if(err){console.log(err)}
}) //connect with our server mentioned in db
var book=require("./model/Book.js");//requiring mongodb
app.get('/',function(req,res){
    res.render("home")
})
app.get('/insert',function(req,res){
   var b1=new book();
   b1.bookid="Book1";
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

})
app.get('/insert1',function(req,res){
   res.render("add")
 })

app.post("/actionPage",function(req,res){
    var BookId = req.body.field1;
    var Bname = req.body.field2;
    var Bauthor = req.body.field3;
    var Bpublisher=req.body.field4;
    var insertData = {BookId:BookId,BookName:Bname,BookAuthor:Bauthor,BookPublisher:Bpublisher}
    mongoclient.connect(url,function(err,database){
        var dtb=database.db('example');
        var empcol=dtb.collection('Booktab');
        empcol.insert(insertData,function(err,successResult){
            if(err){
                res.send("Not insert")
            }
            else{
                res.send("Inserted")
            }
        })
    })

})
app.post("/insert",function(req,res){

    var b1=new book();
   b1.bookid=req.body.Bookid;
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

    var BookId = req.body.Bookid;
    var Bname = req.body.Bookname;
    var Bauthor = req.body.Bookauthor;
    var Bpublisher=req.body.Bookpublisher;
    
})

app.get("/delete",function(req,res){
    res.render("deletebook")
})
app.post("/delete",function(req,res){
   book.deleteOne({bookid:"sdsd"},function(err,result)
        { 
        if(err){res.send("err")}
        else { res.send("data deleted")}
    })// same book given in book of loc18
})


app.get("/view",function(req,res){    
    book.find({},function(err,result){
        if(err){res.send("err")}
        else   {
            res.render('viewbook',{data:result});
        }
    
      
})
})
app.post("/view",function(req,res){    
    book.find({bookid:req.body.bookid},function(err,result){
        if(err){res.send("err")}
        else   {
            res.render('viewbook',{data:result});
        }
    
      
})
})

app.get("/update",function(req,res){
    book.findOne({"bookid":"Book1"},function(err,bdata){ 
   
bdata.bname="wings of fire";
bdata.author="Apj";
bdata.save();
    })
})

app.listen(1234,function(req,res){
    console.log("server started listening")
})
----------------------------------------------------------------------------viewbook.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
        <table>
                <th>no</th>
                <th>BookID</th>
                <th>Book NAme</th>
                <th>Author</th>  
                <th>BookPublisher</th>
                            <% for(var i=0;i<data.length;i++){%>
                        <tr>
                            <td><%=(i+1)%></td>
                            <td><%=data[i].bookid %></td>
                            <td><%=data[i].bname %></td>
                            <td><%=data[i].author %></td>
                            
                            
                        </tr>
                        <% }%>
                        <form action="view"method="post">
                            <input type="text"name="id1">
                            <input type="submit" value="search">

                        </form>
                    </table>
             
</body>
</html>
-----------------------------------------------------------------------------------




const fileupload=require('express-fileupload');

app.use(fileupload());
app.post("/upload",fun(req,res){
let samfile=req.files.sampleFile;
samfile.mv(__dirname +"/Images/f1.jpg",callback);

-----------------------------------------------------------------------------------uploading a file
app.js
var express=require('express');
var bodyparser=require('body-parser')
var mongoose=require('mongoose');// required mongo module
const app=express();
const fileupload=require('express-fileupload');

app.use(fileupload());

app.use(bodyparser.urlencoded({extended:true}))



var mongodb=require('mongodb');
var mongoclient=mongodb.MongoClient;
var url="mongodb://127.0.0.1:27017";//should copy this url else error
app.set("view engine","ejs");
var db="mongodb://localhost/example";//specifying the db used in this project
mongoose.connect(db,function(err){
    if(err){console.log(err)}
}) //connect with our server mentioned in db
var book=require("./model/Book.js");//requiring mongodb
app.get('/',function(req,res){
    res.render("home")
})
app.get('/insert',function(req,res){
   var b1=new book();
   b1.bookid="Book1";
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

})
app.get('/insert1',function(req,res){
   res.render("add")
 })

app.post("/actionPage",function(req,res){
    var BookId = req.body.field1;
    var Bname = req.body.field2;
    var Bauthor = req.body.field3;
    var Bpublisher=req.body.field4;
    var insertData = {BookId:BookId,BookName:Bname,BookAuthor:Bauthor,BookPublisher:Bpublisher}
    mongoclient.connect(url,function(err,database){
        var dtb=database.db('example');
        var empcol=dtb.collection('Booktab');
        empcol.insert(insertData,function(err,successResult){
            if(err){
                res.send("Not insert")
            }
            else{
                res.send("Inserted")
            }
        })
    })

})
app.post("/insert",function(req,res){

    var b1=new book();
   b1.bookid=req.body.Bookid;
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

    var BookId = req.body.Bookid;
    var Bname = req.body.Bookname;
    var Bauthor = req.body.Bookauthor;
    var Bpublisher=req.body.Bookpublisher;
    
})

app.get("/delete",function(req,res){
    res.render("deletebook")
})
app.post("/delete",function(req,res){
   book.deleteOne({bookid:"sdsd"},function(err,result)
        { 
        if(err){res.send("err")}
        else { res.send("data deleted")}
    })// same book given in book of loc18
})


app.get("/view",function(req,res){    
    book.find({},function(err,result){
        if(err){res.send("err")}
        else   {
            res.render('viewbook',{data:result});
        }
    
      
})
})
app.post("/view",function(req,res){    
    book.find({bookid:req.body.bookid},function(err,result){
        if(err){res.send("err")}
        else   {
            res.render('viewbook',{data:result});
        }
    
      
})
})

app.get("/update",function(req,res){
    book.findOne({"bookid":"Book1"},function(err,bdata){ 
   
bdata.bname="wings of fire";
bdata.author="Apj";
bdata.save();
    })
})
app.post("/upload",function(req,res){
    let samfile=req.files.sampleFile;
    samfile.mv(__dirname +"/Images/f1.jpg");
})
app.listen(1234,function(req,res){
    console.log("server started listening")
})
--------------------------------------------------------------------------------home.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>
</head>
<body>

    <li><a href="/insert1">Insert Data</a></li>
    <li><a href="/delete">Delete Data</a></li>
    <li><a href="/view">view Data</a></li>
    <li><a href="/update">Update Data</a></li>
   <form action="/view" method="get">
        
                <input type= "submit" value= "view"/>
    </form> 
    <form action="/delete" method="get">
       <input type= "submit" value= "Delete"/>
</form>
<form action="/view" method="get">
       <input type= "submit" value= "view"/>
</form> 
<form action="/edit" method="get">
        <input type= "submit" value= "Edit"/>
</form> 
<form action="/update" method="get">
        <input type= "submit" value= "update"/>
</form> 

<form action="/upload" method='post'encType="multipart/form-data">
<input type="file"
name="sampleFile"/>
<input type='submit'
value='upload!'>
</form>

</html> 
-------------------------------------------------------------------------server started listening

create a folder named images

goto browser ,http://localhost:1234/,

goto choose file, select an image,click upload,.

the image will apear in the images folder of vsc
--------------------------------------------------------------------------to upload ub the name of the file itself

console.log(sampleFile.name)
images/'+samfile.name

--------------------------------------------------to get the name we login in every page
var express=require('express');
var bodyparser=require('body-parser')
var mongoose=require('mongoose');// required mongo module
const app=express();
const fileupload=require('express-fileupload');

app.use(fileupload());

app.use(bodyparser.urlencoded({extended:true}))



var mongodb=require('mongodb');
var mongoclient=mongodb.MongoClient;
var url="mongodb://127.0.0.1:27017";//should copy this url else error
app.set("view engine","ejs");
var db="mongodb://localhost/example";//specifying the db used in this project
mongoose.connect(db,function(err){
    if(err){console.log(err)}
}) //connect with our server mentioned in db
var book=require("./model/Book.js");//requiring mongodb
app.get('/',function(req,res){
    res.render("home")
})
app.get('/insert',function(req,res){
   var b1=new book();
   b1.bookid="Book1";
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

})
app.get('/insert1',function(req,res){
   res.render("add")
 })

app.post("/actionPage",function(req,res){
    var BookId = req.body.field1;
    var Bname = req.body.field2;
    var Bauthor = req.body.field3;
    var Bpublisher=req.body.field4;
    var insertData = {BookId:BookId,BookName:Bname,BookAuthor:Bauthor,BookPublisher:Bpublisher}
    mongoclient.connect(url,function(err,database){
        var dtb=database.db('example');
        var empcol=dtb.collection('Booktab');
        empcol.insert(insertData,function(err,successResult){
            if(err){
                res.send("Not insert")
            }
            else{
                res.send("Inserted")
            }
        })
    })

})
app.post("/insert",function(req,res){

    var b1=new book();
   b1.bookid=req.body.Bookid;
   b1.bname="shdjshds";
   b1.author="dsdsd";
   b1.save(function(err,result){
      if(err){res.send("err")}
          else { res.send("data inserted")}
   })

    var BookId = req.body.Bookid;
    var Bname = req.body.Bookname;
    var Bauthor = req.body.Bookauthor;
    var Bpublisher=req.body.Bookpublisher;
    
})

app.get("/delete",function(req,res){
    res.render("deletebook")
})
app.post("/delete",function(req,res){
   book.deleteOne({bookid:"sdsd"},function(err,result)
        { 
        if(err){res.send("err")}
        else { res.send("data deleted")}
    })// same book given in book of loc18
})


app.get("/view",function(req,res){    
    book.find({},function(err,result){
        if(err){res.send("err")}
        else   {
            res.render('viewbook',{data:result});
        }
    
      
})
})
app.post("/view",function(req,res){    
    book.find({bookid:req.body.bookid},function(err,result){
        if(err){res.send("err")}
        else   {
            res.render('viewbook',{data:result});
        }
    
      
})
})

app.get("/update",function(req,res){
    book.findOne({"bookid":"Book1"},function(err,bdata){ 
   
bdata.bname="wings of fire";
bdata.author="Apj";
bdata.save();
    })
})
app.post("/upload",function(req,res){
    let samfile=req.files.sampleFile;
    samfile.mv(__dirname +"/Images/f1.jpg");
})
app.get("/login",function(req,res){
    let name=res.render("login")
})
app.post("/login",function(req,res){
    let name=res.render("login")
})
app.listen(1234,function(req,res){
    console.log("server started listening")
})
--------------------------------------------------------------------------login.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
        <form action="/login" method="POST">
            <input type="text" name="username"/>
            
            
            <input type= "submit" value= "login"/>
        </form>
</body>
</html>
----------------------------------------------------------------------------home1.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <h1>welcome <%=name%></h1>
</body>
</html>

-------------------------------------------------
































