var express=require('express');
var bodyparser=require('body-parser')

const app=express();

app.use(bodyparser.urlencoded({extended:true}))

var mongodb=require('mongodb');
var mongoclient=mongodb.MongoClient;
var url="mongodb://127.0.0.1:27017";//should copy this url else error
app.set("view engine","ejs");
app.get("/",function(req,res){
    res.render("home");
})
app.get("/delEmp",function(req,res){
    mongoclient.connect(url,function(err,database){

        if(err){console.log("Database connection error" +err)
        }
        else{
            var dtb=database.db('sample');
            var empcol=dtb.collection('empl');
            empcol.find().toArray(function(err,tbdata){
                console.log(tbdata)
                if(err){
                res.send("no data");
                }
                else{
                    res.render('empdel',{data:tbdata});
                }
            })  
        }
    }) 
})
app.post("/delete",function(req,res){
    mongoclient.connect(url,function(err,database){
        if(err){console.log("Database connection error" +err)
        }
        else{
            var dtb=database.db('sample');
            var empcol=dtb.collection('empl');
            var condition = {name:req.body.empName}
            console.log(condition)
            empcol.remove(condition,function(err,tbdata){
                console.log(tbdata)
                if(err){
                res.send("no data");
                }
                else{
                    res.render('empdel',{data:tbdata});
                }
            })  
        }
    }) 
})
app.get("/insert",function(req,res){
   mongoclient.connect(url,function(err,database)
   {
       var dtb=database.db('sample');
    var col=dtb.collection("empl");
    var data={name:req.body.empid,salary:req.body.salary}
   col.insert(data,function(err,rslt){
        if(err){
            res.send("some things went wrong")
        }
        else{
            res.send("data inserted successfully")}
    })
})
})
app.get("/view",function(req,res){      

mongoclient.connect(url,function(err,database){

    if(err){console.log("Database connection error" +err)}
    else{
    var dtb=database.db('sample');
    var empcol=dtb.collection('empl');
    empcol.find().toArray(function(err,tbdata){
        console.log(tbdata)
        if(err){
        res.send("no data");
               }
        else{
            res.render('empview',{data:tbdata});
            }
     })  
        }
    }) 
})   
    app.listen(8000,function(req,res){
        console.log("server started listening")
    })
---------------------------------------------

in empview.ejs

!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
            <table>
            <th>Sl No.</th>
            <th>name</th>
            <th>Sal</th>  
                        <% for(var i=0;i<data.length;i++){%>
                    <tr>
                        <td><%=(i+1)%></td>
                        <td><%=data[i].name %></td>
                        <td><%=data[i].sal %></td>
                    </tr>
                    <% }%>
                </table>
         
</body>
</html>
------------------------------------------------
in empdel.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=<device-width>, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <h1>delete employee</h1>
    <form action="/delete" method="POST">
    <select name="empName">
        <% for (var i=0;i<data.length;i++){%>
            <option value=<%=data[i].name%>><%=data[i].name%><%=data[i].sal%></option>
            %></option>
            <%}%>
    </select>
    <input type="submit" value="Delete">
    </form>
</body>
</html>
-----------------------------------
in emphome.ejs

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <li><a href="/new" >New employee</a></li>
    <li><a href="/view" >View employee</a></li>
    <li><a href="/edit" >Edit employee</a></li>
    <li><a href="/delete" >New employee</a></li>
</body>
</html>
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

cmd:

> use sample
switched to db sample
> show collections
empl
> show dbs
admin    0.000GB
company  0.000GB
config   0.000GB
library  0.000GB
local    0.000GB
mydb     0.000GB
sample   0.000GB
> show collections
empl
> db.empl.find()
{ "_id" : ObjectId("5c52860e24ae0e1ca027459c"), "name" : "hghjg", "sal" : 8900 }
> ^C
bye

C:\Users\Administrator>d:

D:\>cd new

D:\new>code .

D:\new>mongo
MongoDB shell version v4.0.2
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 4.0.2
Server has startup warnings:
2019-02-05T03:50:37.125+0530 I CONTROL  [initandlisten]
2019-02-05T03:50:37.125+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-02-05T03:50:37.125+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-02-05T03:50:37.125+0530 I CONTROL  [initandlisten]
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
admin    0.000GB
company  0.000GB
config   0.000GB
library  0.000GB
local    0.000GB
mydb     0.000GB
sample   0.000GB
> use sample
switched to db sample
> db.createCollection("users")
{ "ok" : 1 }
> db.users.insert({userName:"deepu",userPassword:"123"})
WriteResult({ "nInserted" : 1 })
> db.users.find()
{ "_id" : ObjectId("5c58f92e424f20a673d315cf"), "userName" : "deepu", "userPassword" : "123" }
> db.users.find()
{ "_id" : ObjectId("5c58f92e424f20a673d315cf"), "userName" : "deepu", "userPassword" : "123" }
{ "_id" : ObjectId("5c58fa519d6c3c2010c145bf"), "userName" : "rajitha", "userPassword" : "1234" }
>























